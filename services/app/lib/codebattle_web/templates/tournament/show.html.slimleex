- matches = @tournament.data.matches
- players = @tournament.data.players
- first_round_left_range = 0..3
- first_round_right_range = 4..7
- second_round_left_range = 8..9
- second_round_right_range = 10..11
- sm_left = 12
- sm_right = 13
- final = 14

header.tournament
  .tournament-header
    h1 = @tournament.name
    p  starts after #{@time.days} days #{@time.hours} hours #{@time.minutes} minutes #{@time.seconds} seconds
section.bracket
  .tournament-container
    .participants-container
      h3 Participants
      = render "_players.html", players: players
      = if Codebattle.Tournament.Helpers.is_waiting_partisipants?(@tournament) do
        = if Codebattle.Tournament.Helpers.is_participant?(@tournament, @current_user.id) do
          button.btn.btn-outline-danger.mt-2[phx-click="leave"] Leave
        - else
          button.btn.btn-outline-success.mt-2[phx-click="join"] Join
        = if Codebattle.Tournament.Helpers.is_creator?(@tournament, @current_user.id) do
          button.btn.btn-outline-success.mt-2[phx-click="start"] Start
      = if Codebattle.Tournament.Helpers.is_creator?(@tournament, @current_user.id) do
        button.btn.btn-outline-danger.mt-2[phx-click="cancel"] Cancel

      = link "Back to tournaments", to: CodebattleWeb.Router.Helpers.tournament_path(@socket, :index), class: "btn btn-success mt-2"

    .bracket-container
      .split.split-one
        .round.round-one.current
          .round-details Round 1
          = Enum.map first_round_left_range,  fn index ->
            ul.matchup
              = render "_match.html", match:  Enum.at(matches, index)
        .round.round-two
          .round-details Round 2
          = Enum.map second_round_left_range,  fn index ->
            ul.matchup
              = render "_match.html", match:  Enum.at(matches, index)
      .champion
        h3 State: #{@tournament.state}
        .semis-l
          .round-details first_semifinal
          ul.matchup.championship
            = render "_match.html", match:  Enum.at(matches, sm_left)
        .final
          i.fa.fa-trophy
          .round-details championship
          ul.matchup.championship
            = render "_match.html", match:  Enum.at(matches, final)
        .semis-r
          .round-details  second_semifinal
          ul.matchup.championship
            = render "_match.html", match:  Enum.at(matches, sm_right)
      .split.split-two
        .round.round-two
          .round-details Round 2
          = Enum.map second_round_right_range,  fn index ->
            ul.matchup
              = render "_match.html", match:  Enum.at(matches, index)
        .round.round-one.current
          .round-details Round 1
          = Enum.map first_round_right_range,  fn index ->
            ul.matchup
              = render "_match.html", match:  Enum.at(matches, index)
